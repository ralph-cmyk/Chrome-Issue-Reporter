name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Build and package extension
        run: npm run package
      
      - name: Get version from manifest
        id: get_version
        run: |
          VERSION=$(node -p "require('./extension/manifest.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extension version: $VERSION"
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: chrome-issue-reporter-v${{ steps.get_version.outputs.version }}
          path: chrome-issue-reporter.zip
          retention-days: 90
      
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: chrome-issue-reporter.zip
          body: |
            ## Chrome Issue Reporter v${{ steps.get_version.outputs.version }}
            
            ### Installation
            
            1. Download `chrome-issue-reporter.zip` from the assets below
            2. Extract the ZIP file to a permanent location
            3. Open Chrome and go to `chrome://extensions/`
            4. Enable **Developer mode** (top-right toggle)
            5. Click **Load unpacked** and select the extracted folder
            
            For detailed installation instructions, see [INSTALL.md](https://github.com/${{ github.repository }}/blob/main/INSTALL.md)
            
            ### What's Included
            
            - Complete extension files ready to install
            - Manifest V3 compatible
            - GitHub OAuth integration for issue creation
            
            ### Configuration Required
            
            Before using the extension, you need to:
            1. Create a GitHub OAuth App and get your Client ID
            2. Update `background.js` with your configuration
            3. See [INSTALL.md](https://github.com/${{ github.repository }}/blob/main/INSTALL.md) for full setup instructions
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

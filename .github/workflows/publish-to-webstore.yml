name: Publish to Chrome Web Store

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Get version from manifest
        id: get_version
        run: |
          VERSION=$(node -p "require('./extension/manifest.json').version")
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "Extension version: $VERSION"
      
      - name: Build extension
        run: npm run build
      
      - name: Create ZIP file
        run: (cd dist && zip -r ../chrome-issue-reporter.zip .)
      
      - name: Publish to Chrome Web Store
        id: webstore_upload
        # Allow workflow to continue even if Web Store upload fails
        # This handles cases where:
        # 1. Extension not yet published (first upload must be manual)
        # 2. Secrets not configured
        # 3. Extension ID is incorrect or extension was removed
        continue-on-error: true
        uses: mnao305/chrome-extension-upload@v5.0.0
        with:
          file-path: chrome-issue-reporter.zip
          extension-id: ${{ secrets.CHROME_EXTENSION_ID }}
          client-id: ${{ secrets.CHROME_CLIENT_ID }}
          client-secret: ${{ secrets.CHROME_CLIENT_SECRET }}
          refresh-token: ${{ secrets.CHROME_REFRESH_TOKEN }}
          publish: true
      
      - name: Determine installation message
        id: install_msg
        run: |
          if [ "${{ steps.webstore_upload.outcome }}" == "success" ]; then
            echo "method=Install directly from the [Chrome Web Store](https://chrome.google.com/webstore) - search for \"Chrome Issue Reporter\"" >> "$GITHUB_OUTPUT"
            echo "updates=**ðŸŽ‰ Automatic Updates:** This version has been automatically published to the Chrome Web Store. All users will receive this update automatically within a few hours." >> "$GITHUB_OUTPUT"
          else
            echo "method=Download the ZIP file below and install manually (Chrome Web Store not yet configured)" >> "$GITHUB_OUTPUT"
            echo "updates=**ðŸ“¦ Manual Installation Required:** This extension is not yet published to the Chrome Web Store. Follow the installation instructions in INSTALL.md." >> "$GITHUB_OUTPUT"
          fi
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          body: |
            ## Chrome Issue Reporter v${{ steps.get_version.outputs.version }}
            
            ### âœ… Installation
            
            ${{ steps.install_msg.outputs.method }}
            
            ${{ steps.install_msg.outputs.updates }}
            
            ### Configuration Required
            
            After installation, configure the extension:
            1. Create a GitHub OAuth App at https://github.com/settings/developers
            2. Open the extension's **Options** page and enter your OAuth App Client ID
            3. Sign in with GitHub
            4. Select your target repository
            5. Start creating issues!
            
            ðŸ“– See [QUICKSTART.md](https://github.com/${{ github.repository }}/blob/main/QUICKSTART.md) for a quick setup guide
            ðŸ“– See [INSTALL.md](https://github.com/${{ github.repository }}/blob/main/INSTALL.md) for detailed instructions
          files: chrome-issue-reporter.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
